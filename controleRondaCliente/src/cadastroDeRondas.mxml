<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:services="services.*"
				width="800" height="100%" 
				title="Cadastro de Rondas">
	
	<fx:Metadata>
		[Event(name="adicionadoRonda", type="flash.events.Event")]
		[Event(name="alteradoRonda", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			Alert.yesLabel = 'Sim';
			Alert.noLabel = 'Não';
			
			import valueObjects.RondaFuncionario;
			import valueObjects.Funcionario;
			import valueObjects.RondaPonto;
			import valueObjects.Ponto;
			import valueObjects.Ronda;
			
			[Bindable]
			private var ronda_id:Object;
			private var ronda:Ronda = new Ronda();
			private var ronFun:RondaFuncionario = new RondaFuncionario();
			private var ronPon:RondaPonto = new RondaPonto();
			private var fun:Funcionario = new Funcionario();
			private var pnt:Ponto = new Ponto();
			private var campoObrigatorio:String = "Este campo é obrigatório";
			
			public static function abrir(pai:DisplayObject):cadastroDeRondas {
				var janela:cadastroDeRondas = new cadastroDeRondas();
				PopUpManager.addPopUp(janela, pai, true);
				PopUpManager.centerPopUp(janela);
				return janela;
			}
			
			private function salvarRonda(event:MouseEvent=null):void {
				txtNomeRonda.errorString = "";
				if (txtNomeRonda.text == "" || txtNomeRonda.text == null) {
					txtNomeRonda.errorString = campoObrigatorio;
					return;
				}
				ronda.nomeRonda = txtNomeRonda.text;

				if (ronda_id == null) {
					insertRonda.token = rondaControle.incluir(ronda);
				} else {
					updateRonda.token = rondaControle.alterar(ronda);
				}
			}
			
			public function editarRonda(id:Number):void {
				getRonda.token = rondaControle.consultar(id);
				ronda_id = id;
				listarRondaPonto();
				listarRondaFuncionario();
				PopUpManager.centerPopUp(this);
			}
			
			private function carregarRonda(event:ResultEvent):void {
				ronda = event.result as Ronda;
				txtNomeRonda.text = ronda.nomeRonda;
			}
			
			private function adicionarFuncionario():void {
				var fr:adicionarFuncionarioRonda = adicionarFuncionarioRonda.abrir(this, ronda.id);
				fr.addEventListener("adicionadoFuncionarioRonda", function(evt:Event):void {
					listarRondaFuncionario();
				});
			}
			
			private function excluirFuncionario():void {
				Alert.show('Você deseja excluir o funcionário selecionado?', 'Alerta!', Alert.YES | Alert.NO, null,  function(evt:CloseEvent):void {
					if (evt.detail == Alert.YES) {
						ronFun.id = dataGridFuncionario.selectedItem.id;
						rondaFuncionarioControle.excluir(ronFun);
						listarRondaFuncionario();
					}
				}, null, Alert.YES);
			}
			
			private function adicionarPonto():void {
				var fr:adicionarPontoRonda = adicionarPontoRonda.abrir(this, ronda.id);
				fr.addEventListener("adicionadoPontoRonda", function(evt:Event):void {
					listarRondaPonto();
				});
			}
			
			private function excluirPonto():void {
				Alert.show('Você deseja excluir o ponto selecionado?', 'Alerta!', Alert.YES | Alert.NO, null,  function(evt:CloseEvent):void {
					if (evt.detail == Alert.YES) {
						ronPon.id = dataGridPonto.selectedItem.id;
						rondaPontoControle.excluir(ronPon);
						listarRondaPonto();
					}
				}, null, Alert.YES);
			}
			
			private function listarRondaFuncionario(event:FlexEvent=null):void {
				getRondaFuncionario.token = rondaFuncionarioControle.listar(Number (ronda_id));
			}
			
			private function listarRondaPonto(event:FlexEvent=null):void {
				getRondaPonto.token = rondaPontoControle.listar(Number (ronda_id));
			}
			
			private function formatarData(item:Object, column:DataGridColumn):String{				
				var dataFormatada:DateFormatter = new DateFormatter();
				dataFormatada.formatString = "DD/MM/YYYY";
				return dataFormatada.format(item[column.dataField]);
			}
			
			private function fechar():void {
				PopUpManager.removePopUp(this);
			}
			
			protected function rondaControle_fault(event:FaultEvent):void {
				Alert.show(event.fault.rootCause.message);
			}
			
			protected function rondaAdicionado(event:ResultEvent):void {
				Alert.show("Ronda adicionada com sucesso!");
				dispatchEvent(new Event("adicionadoRonda"));
				fechar();
			}
			
			protected function rondaAlterado(event:ResultEvent):void {
				Alert.show("Ronda alterada com sucesso!");
				dispatchEvent(new Event("alteradoRonda"));
				fechar();
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:CallResponder id="getRondaFuncionario"/>
		<mx:CallResponder id="getRondaPonto"/>
		<mx:CallResponder id="getRonda" result="carregarRonda(event)"/>
		<mx:CallResponder id="insertRonda" result="rondaAdicionado(event)" />
		<mx:CallResponder id="updateRonda" result="rondaAlterado(event)" />
		<services:RondaFuncionarioControle id="rondaFuncionarioControle"
									endpoint="http://localhost:8080/controleRondaServidor/messagebroker/amf"
									fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
									showBusyCursor="true"/>
		<services:RondaPontoControle id="rondaPontoControle"
									endpoint="http://localhost:8080/controleRondaServidor/messagebroker/amf"
									fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
									showBusyCursor="true"/>
		<services:RondaControle id="rondaControle"
							   endpoint="http://localhost:8080/controleRondaServidor/messagebroker/amf"
							   fault="rondaControle_fault(event)"
							   showBusyCursor="true"/>
		<services:FuncionarioControle id="funcionarioControle"
									  endpoint="http://localhost:8080/controleRondaServidor/messagebroker/amf"
									  fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
									  showBusyCursor="true"/>
		<services:PontoControle id="pontoControle"
								endpoint="http://localhost:8080/controleRondaServidor/messagebroker/amf"
								fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
								showBusyCursor="true"/>
	</fx:Declarations>
	
	<mx:ApplicationControlBar width="100%" borderStyle="none">
		<mx:Button id="btnSalvar" label="Salvar" click="salvarRonda()" icon="@Embed('icones/salvar.png')"/>
	</mx:ApplicationControlBar>
	
	<mx:Form id="cadastroRonda" width="100%" borderStyle="solid">
		<mx:FormItem required="true" label="Nome Ronda:" width="100%">
			<mx:TextInput id="txtNomeRonda" width="100%" maxChars="200"/>						
		</mx:FormItem>
		<mx:ApplicationControlBar width="100%" borderStyle="none" includeInLayout="{ronda_id != null}" visible="{ronda_id != null}">
			<mx:Button id="btnAdicionarFuncionario" label="Adicionar Funcionário" click="adicionarFuncionario()" icon="@Embed('icones/adicionar.png')"/>
			<mx:Button id="btnExcluirFuncionario" label="Excluir Funcionário" click="excluirFuncionario()" enabled="{dataGridFuncionario.selectedItem != null}" icon="@Embed('icones/excluir.png')"/>
		</mx:ApplicationControlBar>
		<mx:DataGrid id="dataGridFuncionario" width="100%" height="100%" includeInLayout="{ronda_id != null}" visible="{ronda_id != null}">
			<mx:columns>
				<mx:DataGridColumn dataField="funcionario.nomeFuncionario" headerText="Nome do Funcionário"/>
				<mx:DataGridColumn dataField="dataInicialFuncionario" headerText="Data Inicial" labelFunction="formatarData"/>
				<mx:DataGridColumn dataField="dataFinalFuncionario" headerText="Data Final" labelFunction="formatarData"/>
				<mx:DataGridColumn dataField="dataCadastro" headerText="Data do Cadastro" labelFunction="formatarData"/>
			</mx:columns>
			<mx:AsyncListView list="{getRondaFuncionario.lastResult}"/>
		</mx:DataGrid>
		<mx:ApplicationControlBar width="100%" borderStyle="none" includeInLayout="{ronda_id != null}" visible="{ronda_id != null}">
			<mx:Button id="btnAdicionarPonto" label="Adicionar Ponto" click="adicionarPonto()" icon="@Embed('icones/adicionar.png')"/>
			<mx:Button id="btnEexcluirPonto" label="Excluir Ponto" click="excluirPonto()" enabled="{dataGridPonto.selectedItem != null}" icon="@Embed('icones/excluir.png')"/>
		</mx:ApplicationControlBar>
		<mx:DataGrid id="dataGridPonto" width="100%" height="100%" includeInLayout="{ronda_id != null}" visible="{ronda_id != null}">
			<mx:columns>
				<mx:DataGridColumn dataField="ponto.nomePonto" headerText="Nome do Ponto"/>
				<mx:DataGridColumn dataField="horaInicialPonto" headerText="Hora Inicial"/>
				<mx:DataGridColumn dataField="horaFinalPonto" headerText="Hora Final"/>
				<mx:DataGridColumn dataField="dataCadastro" headerText="Data do Cadastro" labelFunction="formatarData"/>
			</mx:columns>
			<mx:AsyncListView list="{getRondaPonto.lastResult}"/>
		</mx:DataGrid>
	</mx:Form>
	
	<mx:ControlBar horizontalAlign="right" borderStyle="none">		
		<mx:Button id="btnFechar" label="Fechar" click="fechar()"/>				
	</mx:ControlBar>
	
</mx:TitleWindow>
